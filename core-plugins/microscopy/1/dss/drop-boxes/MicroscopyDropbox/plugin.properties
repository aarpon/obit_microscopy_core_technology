# The directory to watch for new data sets
incoming-dir = ${incoming-root-dir}/incoming-microscopy

# The handler class.
top-level-data-set-handler = ch.systemsx.cisd.openbis.dss.etl.jython.v2.JythonPlateDataSetHandlerV2

# The script to execute, reloaded and recompiled each time a file/folder is placed in the dropbox
script-path = MicroscopyDropbox.py

# The appropriate storage processor
storage-processor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyStorageProcessor

# Defines how the drop box decides if a folder is ready to process: either by a 'marker-file' or a time out which is called 'auto-detection'
# The time out is set globally in the service.properties and is called 'quiet-period'. This means when the number of seconds is over and no changes have
# been made to the incoming folder the drop will start to register. The marker file must have the following naming schema: '.MARKER_is_finished_<incoming_folder_name>'
incoming-data-completeness-condition = marker-file

# Storage processor
storage-processor.data-source = imaging-db

# Enable development mode
development-mode = true
