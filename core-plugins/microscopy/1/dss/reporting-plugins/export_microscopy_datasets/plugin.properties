class = ch.systemsx.cisd.openbis.dss.generic.server.plugins.jython.JythonAggregationService
label = Copy microscopy datasets to user folder
dataset-types = MICROSCOPY_IMG
script-path = export_microscopy_datasets.py

# Custom plug-in settings
#
# This plug-in exports the selected datasets to a specific directory on
# the same file system as the DSS (it can of course be a network mount) and/or
# into the HRM source folder. Both are optional and can be disabled in the
# configuration files of the microscopy-experiment-viewer and microscopy-viewer
# web apps.
#
# 1) Generic directory
#
# The actual directory is a constructed from three parts:
#
#     ${base_dir}/${username}/${export_dir}
#
# ${base_dir} is common to all users, ${username} is provided by openBIS at
# runtime and maps to the user currently logged in, and ${export_dir} is a 
# specific sub-folder in ${base_dir}/${username} where the files are copied.
#
# ${export_dir} is meant to prevent that files are dumped wildly at the root
# of, e.g., the user's home folder. 
#
# In a simplified, but unlikely, example case, ${base_dir} could be '/home',
# and ${export_dir} could be 'openbis_export', so that when user 'joe' triggers 
# the plug-in from openBIS, his data will be copied to:
#
#    /home/joe/openbis_export
#
# 2) Huygens Remote Manager source directory
#
# The same considerations hold as for 1). The directory is constructed as follows:
#
#     ${hrm_base_dir}/${username}/${hrm_src_subdir}
#
# As an example, if ${hrm_base_dir} is '/data' and ${hrm_src_subdir} is 'src',
# when user 'jpe' triggers the plug-in from openBIS, the data will be copied to:
#
#
#    /data/joe/src
#

# Generic folder
base_dir = /links/groups/scu/working
export_dir = openbis_export

# HRM source folder
hrm_base_dir = /links/groups/scu/working
hrm_src_subdir = src
